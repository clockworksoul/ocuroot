package state

import (
    "fmt"

    "github.com/ocuroot/ui/components"
    "github.com/ocuroot/ocuroot/store/models"
    "github.com/ocuroot/ocuroot/lib/release"
    "github.com/ocuroot/ocuroot/ui/components/pipeline"
    "github.com/ocuroot/ui/components/table"
    "github.com/ocuroot/ocuroot/refs"
)

templ ReleaseCard(props RefPageProps) {
    <p class="subtitle">Commit: <a href="#">{ props.Content.(release.ReleaseInfo).Commit }</a></p>
    @components.Card() {
        @pipeline.Pipeline(pipeline.PipelineProps{
			Summary: ReleasePreview(props),
		})
    }
}

func ReleasePreview(props RefPageProps) *pipeline.ReleaseSummary {
    summary := pipeline.SDKPackageToReleaseSummary(
		models.ReleaseID(props.Ref),
		"preview",
		props.Content.(release.ReleaseInfo).Package,
		props.ChildRefs...,
	)
    return summary
}

templ ReleaseList(refList []string) {
    @table.Table(table.TableProps{}, "Repo", "Config file", "Release") {
        for _, ref := range refList {
            if pr, err := refs.Parse(ref); err != nil {
                @table.Tr(table.TRProps{}) {
                    @table.Td(table.TDProps{}) {
                        { ref }
                    }
                }
            } else {
                @table.Tr(table.TRProps{
                    Link: templ.URL(fmt.Sprintf("/ref/%s", ref)),
                }) {
                    @table.Td(table.TDProps{}) {
                        { pr.Repo }
                    }
                    @table.Td(table.TDProps{}) {
                        { pr.Filename }
                    }
                    @table.Td(table.TDProps{}) {
                       { pr.ReleaseOrIntent.Value } 
                    }
                }
            }
        }   
    }
}

